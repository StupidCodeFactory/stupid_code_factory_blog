version: 2
jobs:
  build:
    working_directory: ~/stupid_code_factory_blog
    docker:
      - image: circleci/ruby:2.4.2-node
        environment:
          RAILS_ENV: test
      - image: circleci/postgres:alpine
      - image: elasticsearch
    steps:
      - checkout
      # Restore bundle cache
      - restore_cache:
          key: rails-{{ checksum "Gemfile.lock" }}

      - setup_remote_docker

      # Bundle install dependencies
      - run: bundle install --path vendor/bundle
      - run: sudo apt-get install python-pip python-dev build-essential
      - run: sudo pip install --upgrade pip
      - run: sudo pip install awscli
      # Store bundle cache
      - save_cache:
          key: rails-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle

      # Database setup
      - run:
          name: Set up db
          command: |
            bundle exec rake db:create db:schema:load --trace
            bundle exec rake db:migrate

      # Run rspec in parallel
      - type: shell
        command: |
          bundle exec rspec --profile 10 \
                            --format RspecJunitFormatter \
                            --out test_results/rspec.xml \
                            --format progress \
                            $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)

      # Save test results for timing analysis
      - store_test_results:
          path: test_results


      - deploy:
          name: Push application Docker image
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
              login="$(aws ecr get-login)"
              ${login}
              TAG=$CIRCLE_BRANCH-latest
              docker tag  "stupid-code-factory-blog:${CIRCLE_SHA1}" "466565482925.dkr.ecr.eu-west-2.amazonaws.com/stupid-code-factory-blog:${CIRCLE_SHA1}"
              docker push "${ECR_ENDPOINT}/app:${CIRCLE_SHA1}"
            fi
